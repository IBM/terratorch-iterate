# configuration approach followed:
# - whenever possible, prefer pyproject.toml
# - for configurations insufficiently supported by pyproject.toml, use setup.cfg instead
# - setup.py discouraged; minimal stub included only for compatibility with legacy tools

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "benchmark"
version = "0.1.0"
description = "A tool for benchmarking and hpo"
authors = [
    "Carlos Gomes <carlos.gomes@ibm.com>",
]
readme = "README.md"
repository = "https://github.ibm.com/GeoFM-Finetuning/benchmark"

[tool.poetry.dependencies]
python = ">= 3.10, < 3.11"
click = "*"
# optional dependencies that can be opted in by apps.
pytest = { version = "*", optional = true }
pytest-cov = { version = "*", optional = true }
torch = "^2.2.0"
torchvision = "^0.17.0"
# eventually change to main branch
terratorch = {git = "git@github.ibm.com:GeoFM-Finetuning/terratorch.git", branch="feature/model_factory_as_string"}
more-itertools = "^10.2.0"
mlflow = "^2.10.2"
importlib-metadata = "4.13.0"
optuna = "^3.5.0"
tabulate = "^0.9.0"
types-tabulate = "^0.9.0.20240106"
ray = {extras = ["default"], version = "^2.9.3"}

[tool.poetry.extras]
test = ["pytest", "pytest-cov"]

[tool.poetry.group.dev]
optional = false

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-cov = "*"
black = "*"
flake8 = "*"
pep8-naming = "*"
mypy = "*"
sphinx = "*"
sphinx-autodoc-typehints = "*"
better-apidoc = "*"
six = "*"
sphinx-rtd-theme = "*"
myst-parser = "*"
ruff = "^0.2.2"

[tool.poetry.scripts]
benchmark = "benchmark.backbone_benchmark:main"

[tool.black]
line-length = 88
skip-string-normalization = false
target-version = ['py37']

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
force_to_top = ["rdkit", "scikit-learn"]

[tool.mypy]
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "pytest.*"
ignore_missing_imports = true
